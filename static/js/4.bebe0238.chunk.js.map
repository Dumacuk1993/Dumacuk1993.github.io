{"version":3,"sources":["resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","components/charSearchForm/CharSearchForm.js","components/pages/MainPage.js"],"names":["View","data","name","description","thumbnail","homepage","wiki","className","src","style","objectFit","alt","href","RandomChar","useState","char","setChar","useMarvelService","getCharacter","clearError","process","setProcess","useEffect","getRandomChar","onCharLoader","id","Math","floor","random","then","setContent","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","offset","setOffset","charEnded","setCharEnded","getAllCharacters","onRequest","initial","onCharListLoaded","newCharList","ended","length","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","elements","useMemo","Component","Loading","Error","arr","items","map","i","imgStyle","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","display","comics","comic","CharInfo","charId","charUpdate","ErrorBoundary","state","error","errorInfo","this","setState","console","log","children","CharSearchForm","loading","getCharacterByName","errorMessage","result","to","initialValues","charName","validationSchema","Yup","required","onSubmit","htmlFor","type","placeholder","component","MainPage","selectedChar","setSelectedChar","Helmet","content"],"mappings":"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","file":"static/js/4.bebe0238.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import \"./randomChar.scss\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\nimport { useState, useEffect } from \"react\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport setContent from \"../../utils/setContent\";\n\nconst RandomChar = () => {\n\n  const [char, setChar] = useState({}); \n\n  const {getCharacter, clearError, process, setProcess} = useMarvelService();\n\n  useEffect(() => {\n    getRandomChar();\n    // const interval = setInterval(() => {\n    //   getRandomChar();\n    // }, 5000);\n\n    // return () => {\n    //   clearInterval(interval)\n    // }\n  }, [])\n\n    \n  const onCharLoader = (char) => {\n    setChar(char)\n  };\n\n  const getRandomChar = () => {\n    clearError()\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n    getCharacter(id)\n      .then(onCharLoader)\n      .then(() => setProcess('confirmed'))\n  };\n\n\n    return (\n      <div className=\"randomchar\">\n        {setContent(process, View, char)}\n        <div className=\"randomchar__static\">\n          <p className=\"randomchar__title\">\n            Random character for today!\n            <br />\n            Do you want to get to know him better?\n          </p>\n          <p className=\"randomchar__title\">Or choose another one</p>\n          <button className=\"button button__main\" onClick={getRandomChar}>\n            <div className=\"inner\">try it</div>\n          </button>\n          <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n        </div>\n      </div>\n    );\n}\n\nconst View = ({data}) => {\n  const { name, description, thumbnail, homepage, wiki } = data;\n\n  return (\n    <div className=\"randomchar__block\">\n      <img\n        src={thumbnail}\n        style={\n          thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n            ? { objectFit: \"contain\" }\n            : null\n        }\n        alt=\"Random character\"\n        className=\"randomchar__img\"\n      />\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">{description}</p>\n        <div className=\"randomchar__btns\">\n          <a href={homepage} className=\"button button__main\">\n            <div className=\"inner\">homepage</div>\n          </a>\n          <a href={wiki} className=\"button button__secondary\">\n            <div className=\"inner\">Wiki</div>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RandomChar;\n","import \"./charList.scss\";\nimport PropTypes from \"prop-types\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport { useState, useEffect, useRef, useMemo } from \"react\";\nimport Loading from \"../loading/Loading\";\nimport Error from \"../error/Error\";\n\nconst setContent = (process, Component, newItemLoading) => {\n  switch (process) {\n    case \"waiting\":\n      return <Loading />;\n    case \"loading\":\n      return newItemLoading ? <Component /> : <Loading />;\n    case \"confirmed\":\n      return <Component />;\n    case \"error\":\n      return <Error />;\n    default:\n      break;\n  }\n};\n\nconst CharList = (props) => {\n  const [charList, setCharList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [charEnded, setCharEnded] = useState(false);\n\n  const { process, getAllCharacters, setProcess} = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n    // eslint-disable-next-line\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true)\n    getAllCharacters(offset)\n      .then(onCharListLoaded)\n      .then(() => setProcess('confirmed'))\n  };\n\n  const onCharListLoaded = (newCharList) => {\n    let ended = false;\n    if (newCharList.length < 9) {\n      ended = true;\n    }\n\n    setCharList((charList) => [...charList, ...newCharList]);\n    setNewItemLoading(false);\n    setOffset((offset) => offset + 9);\n    setCharEnded(ended);\n  };\n\n  const itemRefs = useRef([]);\n\n  const focusOnItem = (id) => {\n    itemRefs.current.forEach((item) =>\n      item.classList.remove(\"char__item_selected\")\n    );\n    itemRefs.current[id].classList.add(\"char__item_selected\");\n    itemRefs.current[id].focus();\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      let imgStyle = { objectFit: \"cover\" };\n      if (\n        item.thumbnail ===\n        \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n      ) {\n        imgStyle = { objectFit: \"unset\" };\n      }\n\n\n      return (\n        <li\n          className=\"char__item\"\n          tabIndex={0}\n          ref={(el) => (itemRefs.current[i] = el)}\n          key={item.id}\n          onClick={() => {\n            props.onCharSelected(item.id);\n            focusOnItem(i);\n          }}\n          onKeyPress={(e) => {\n            if (e.key === \" \" || e.key === \"Enter\") {\n              props.onCharSelected(item.id);\n              focusOnItem(i);\n            }\n          }}\n        >\n          <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n          <div className=\"char__name\">{item.name}</div>\n        </li>\n      );\n    });\n\n    \n    return <ul className=\"char__grid\">{items}</ul>;\n  }\n\n  const elements = useMemo(() => {\n    return setContent(process, () => renderItems(charList), newItemLoading)\n    // eslint-disable-next-line\n  }, [process])\n\n  return (\n    <div className=\"char__list\">\n      {elements}\n      <button\n        className=\"button button__main button__long\"\n        disabled={newItemLoading}\n        style={{ display: charEnded ? \"none\" : \"block\" }}\n        onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nCharList.propTypes = {\n  onCharSelected: PropTypes.func.isRequired,\n};\n\nexport default CharList;\n","/* eslint-disable array-callback-return */\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./charInfo.scss\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport setContent from \"../../utils/setContent\";\n\n\nconst CharInfo = (props) => {\n  const [char, setChar] = useState(null);\n\n  const { process, getCharacter, setProcess } = useMarvelService();\n\n  const onCharLoader = (char) => {\n    setChar(char);\n  };\n\n  const charUpdate = () => {\n    const { charId } = props;\n    if (!charId) {\n      return;\n    }\n\n    getCharacter(charId).then(onCharLoader).then(() => setProcess('confirmed'));\n  };\n\n  useEffect(() => {\n    charUpdate();\n  }, [props.charId]);\n\n\n  return (\n    <div className=\"char__info\">\n      {setContent(process, View, char)}\n    </div>\n  );\n};\n\nconst View = ({ data }) => {\n  const { name, thumbnail, description, homepage, wiki, comics } = data;\n\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img\n          src={thumbnail}\n          style={\n            thumbnail ===\n            \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n              ? { objectFit: \"contain\" }\n              : null\n          }\n          alt={name}\n        />\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">Wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">{description}</div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        {comics.length > 0 ? null : \"There is no comics with this character\"}\n        {comics.map((comic, i) => {\n          if (i < 10) {\n            return (\n              <li key={i} className=\"char__comics-item\">\n                {comic.name}\n              </li>\n            );\n          }\n        })}\n      </ul>\n    </>\n  );\n};\n\nCharInfo.propTypes = {\n  charId: PropTypes.number,\n};\n\nexport default CharInfo;\n","import {Component} from 'react'\r\nimport Error from '../error/Error';\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({\r\n            error: true\r\n        })\r\n\r\n        console.log(error, errorInfo);\r\n    }\r\n    \r\n    render() {\r\n        if (this.state.error) {\r\n            return <Error/>\r\n        }\r\n\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary","import { useState } from \"react\";\r\nimport {\r\n  Formik,\r\n  Form,\r\n  Field,\r\n  ErrorMessage as FormikErrorMessage,\r\n} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Error from \"../error/Error\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./CharSearchForm.scss\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\n\r\nconst CharSearchForm = () => {\r\n  const [char, setChar] = useState();\r\n  const { loading, error, clearError, getCharacterByName } = useMarvelService();\r\n\r\n  const onCharLoader = (char) => {\r\n    setChar(char);\r\n  };\r\n\r\n  const charUpdate = (name) => {\r\n    clearError();\r\n\r\n    getCharacterByName(name).then(onCharLoader);\r\n  };\r\n\r\n  const errorMessage = error ? (\r\n    <div className=\"char__search-critical-error\">\r\n      <Error />\r\n    </div>\r\n  ) : null;\r\n\r\n  const result = !char ? null : char.length > 0 ? (\r\n    <div className=\"char__search-wrapper\">\r\n      <div className=\"char__search-success\">\r\n        There is! Visit {char[0].name} page?\r\n      </div>\r\n      <Link\r\n        to={`/characters/${char[0].id}`}\r\n        className=\"button button__secondary\"\r\n      >\r\n        <div className=\"inner\">To page</div>\r\n      </Link>\r\n    </div>\r\n  ) : (\r\n    <div className=\"char__search-error\">\r\n      The character was not found. Check the name and try again\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"char__search-form\">\r\n      <Formik\r\n        initialValues={{ charName: \"\" }}\r\n        validationSchema={Yup.object({\r\n          charName: Yup.string().required(\"This field is required\"),\r\n        })}\r\n        onSubmit={({ charName }) => {\r\n          charUpdate(charName);\r\n        }}\r\n      >\r\n        <Form>\r\n          <label className=\"char__search-label\" htmlFor=\"charName\"></label>\r\n          <div className=\"char__search-wrapper\">\r\n            <Field\r\n              id=\"charName\"\r\n              type=\"name\"\r\n              name=\"charName\"\r\n              placeholder=\"Enter name\"\r\n            />\r\n            <button\r\n              className=\"button button__main\"\r\n              type=\"submit\"\r\n              disabled={loading}\r\n            >\r\n              <div className=\"inner\">find</div>\r\n            </button>\r\n          </div>\r\n          <FormikErrorMessage\r\n            name=\"charName\"\r\n            className=\"char__search-error\"\r\n            component=\"div\"\r\n          />\r\n        </Form>\r\n      </Formik>\r\n      {result}\r\n      {errorMessage}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharSearchForm;\r\n","import {useState} from \"react\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport CharSearchForm from \"../charSearchForm/CharSearchForm\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst MainPage = () => {\r\n    const [selectedChar, setSelectedChar] = useState(null)\r\n\r\n    const onCharSelected = (id) => {\r\n        setSelectedChar(id)\r\n    }\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta name=\"description\" content=\"Marvel information portal\" />\r\n        <title>Marvel information portal</title>\r\n      </Helmet>\r\n      <ErrorBoundary>\r\n        <RandomChar />\r\n      </ErrorBoundary>\r\n      <div className=\"char__content\">\r\n        <ErrorBoundary>\r\n          <CharList onCharSelected={onCharSelected} />\r\n        </ErrorBoundary>\r\n        <div>\r\n          <ErrorBoundary>\r\n            <CharInfo charId={selectedChar} />\r\n          </ErrorBoundary>\r\n          <ErrorBoundary>\r\n            <CharSearchForm/>\r\n          </ErrorBoundary>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"],"sourceRoot":""}