{"version":3,"sources":["resources/img/vision.png","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["setContent","process","Component","newItemLoading","Loading","Error","ComicsList","useState","comicsList","setComicsList","setNewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","useMarvelService","getAllComics","setProcess","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","className","arr","items","map","item","i","to","id","src","thumbnail","alt","name","price","renderItems","onClick","disabled","style","display","ComicsPage","Helmet","content","AppBanner","decoration","_toConsumableArray","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"2IAAe,UAA0B,mC,sECQnCA,EAAa,SAACC,EAASC,EAAWC,GACtC,OAAQF,GACN,IAAK,UACH,OAAO,cAACG,EAAA,EAAD,IACT,IAAK,UACH,OAAOD,EAAiB,cAACD,EAAD,IAAgB,cAACE,EAAA,EAAD,IAC1C,IAAK,YACH,OAAO,cAACF,EAAD,IACT,IAAK,QACH,OAAO,cAACG,EAAA,EAAD,MAyEEC,EAnEI,WACjB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4CF,oBAAS,GAArD,mBAAOJ,EAAP,KAAuBO,EAAvB,KACA,EAA4BH,mBAAS,GAArC,mBAAOI,EAAP,KAAeC,EAAf,KACA,EAAsCL,oBAAS,GAA/C,mBAAOM,EAAP,KAAoBC,EAApB,KAEA,EAA8CC,cAAtCd,EAAR,EAAQA,QAASe,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,WAE/BC,qBAAU,WACRC,EAAUR,GAAQ,KAEjB,IAEH,IAAMQ,EAAY,SAACR,EAAQS,GACfV,GAAVU,GACAJ,EAAaL,GAAQU,KAAKC,GAAoBD,MAAK,kBAAMJ,EAAW,iBAGhEK,EAAqB,SAACC,GAC1B,IAAIC,GAAQ,EACRD,EAAcE,OAAS,IACzBD,GAAQ,GAGVf,GAAc,SAACD,GAAD,4BAAoBA,GAApB,YAAmCe,OACjDb,GAAkB,GAClBE,GAAU,SAACD,GAAD,OAAYA,EAAS,KAC/BG,EAAeU,IAyBjB,OACE,sBAAKE,UAAU,eAAf,UACG1B,EAAWC,GAAS,kBAxBzB,SAAqB0B,GACnB,IAAMC,EAAQD,EAAIE,KAAI,SAACC,EAAMC,GAC3B,OACE,oBACEL,UAAU,eADZ,SAIE,eAAC,IAAD,CAAMM,GAAE,kBAAaF,EAAKG,IAA1B,UACE,qBACEC,IAAKJ,EAAKK,UACVC,IAAKN,EAAKO,KACVX,UAAU,qBAEZ,qBAAKA,UAAU,oBAAf,SAAoCI,EAAKO,OACzC,qBAAKX,UAAU,qBAAf,SAAqCI,EAAKQ,YATvCR,EAAKG,OAchB,OAAO,oBAAIP,UAAU,eAAd,SAA8BE,IAKRW,CAAY/B,KAAaL,GACpD,wBACEuB,UAAU,mCACVc,QAAS,kBAAMrB,EAAUR,IACzB8B,SAAUtC,EACVuC,MAAO,CAAEC,QAAS9B,EAAc,OAAS,SAJ3C,SAME,qBAAKa,UAAU,QAAf,6B,gBCjEOkB,UAdI,WACjB,OACE,qCACE,eAACC,EAAA,EAAD,WACE,sBAAMR,KAAK,cAAcS,QAAQ,oBACjC,oDAEF,cAACC,EAAA,EAAD,IACA,cAAC,EAAD,IACA,qBAAKrB,UAAU,gBAAgBQ,IAAKc,EAAYZ,IAAI,gB,0FCV3C,SAASa,EAAmBtB,GACzC,OCJa,SAA4BA,GACzC,GAAIuB,MAAMC,QAAQxB,GAAM,OAAO,OAAAyB,EAAA,GAAiBzB,GDGzC,CAAkBA,IELZ,SAA0B0B,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgB1B,IAAQ,OAAA+B,EAAA,GAA2B/B,IGLvE,WACb,MAAM,IAAIgC,UAAU,wIHIwE","file":"static/js/5.ec3c0446.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport useMarvelService from \"../../services/MarvelService\";\nimport Loading from \"../loading/Loading\";\nimport Error from \"../error/Error\";\nimport \"./comicsList.scss\";\n\nconst setContent = (process, Component, newItemLoading) => {\n  switch (process) {\n    case \"waiting\":\n      return <Loading />;\n    case \"loading\":\n      return newItemLoading ? <Component /> : <Loading />;\n    case \"confirmed\":\n      return <Component />;\n    case \"error\":\n      return <Error />;\n    default:\n      break;\n  }\n};\n\nconst ComicsList = () => {\n  const [comicsList, setComicsList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(0);\n  const [comicsEnded, setComicsEnded] = useState(false);\n\n  const { process, getAllComics, setProcess } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n    // eslint-disable-next-line\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n    getAllComics(offset).then(onComicsListLoaded).then(() => setProcess('confirmed'));\n  };\n\n  const onComicsListLoaded = (newComicsList) => {\n    let ended = false;\n    if (newComicsList.length < 8) {\n      ended = true;\n    }\n\n    setComicsList((comicsList) => [...comicsList, ...newComicsList]);\n    setNewItemLoading(false);\n    setOffset((offset) => offset + 8);\n    setComicsEnded(ended);\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      return (\n        <li\n          className=\"comics__item\"\n          key={item.id}\n        >\n          <Link to={`/comics/${item.id}`}>\n            <img\n              src={item.thumbnail}\n              alt={item.name}\n              className=\"comics__item-img\"\n            />\n            <div className=\"comics__item-name\">{item.name}</div>\n            <div className=\"comics__item-price\">{item.price}</div>\n          </Link>\n        </li>\n      );\n    });\n    return <ul className=\"comics__grid\">{items}</ul>;\n  }\n\n  return (\n    <div className=\"comics__list\">\n      {setContent(process, () => renderItems(comicsList), newItemLoading)}\n      <button\n        className=\"button button__main button__long\"\n        onClick={() => onRequest(offset)}\n        disabled={newItemLoading}\n        style={{ display: comicsEnded ? \"none\" : \"block\" }}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nexport default ComicsList;\n\n","import decoration from \"../../resources/img/vision.png\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta name=\"description\" content=\"All comics list\" />\r\n        <title>Comics Pages</title>\r\n      </Helmet>\r\n      <AppBanner />\r\n      <ComicsList />\r\n      <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComicsPage;\r\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}